// B2B SaaS Platform Analytics Queries

// 1. Basic Customer Information
// Find all enterprise customers
db.customers.find({ tier: "enterprise" })

// Find customers with expiring subscriptions in next 30 days
db.customers.find({
  "subscription.renewalDate": {
    $gte: new Date(),
    $lte: new Date(new Date().setDate(new Date().getDate() + 30))
  }
})

// 2. Usage Analytics
// Calculate total compute time per customer
db.usage_logs.aggregate([
  {
    $group: {
      _id: "$customerId",
      totalComputeTime: { $sum: "$resourceUsage.computeTime" },
      totalDataProcessed: { $sum: "$resourceUsage.dataProcessed" }
    }
  }
])

// Find features used by specific customer
db.usage_logs.distinct("feature", { customerId: "CUST001" })

// 3. Support Ticket Analysis
// Get open high-priority tickets with customer info
db.support_tickets.aggregate([
  {
    $match: {
      status: "open",
      priority: "high"
    }
  },
  {
    $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "customerId",
      as: "customerInfo"
    }
  }
])

// Calculate average resolution time for tickets
db.support_tickets.aggregate([
  {
    $match: { status: "resolved" }
  },
  {
    $project: {
      resolutionTime: {
        $divide: [
          { $subtract: [{ $toDate: "$updatedAt" }, { $toDate: "$createdAt" }] },
          3600000 // Convert to hours
        ]
      }
    }
  },
  {
    $group: {
      _id: null,
      avgResolutionTime: { $avg: "$resolutionTime" }
    }
  }
])

// 4. Revenue Analysis
// Calculate total revenue by subscription tier
db.customers.aggregate([
  {
    $group: {
      _id: "$tier",
      totalRevenue: { $sum: "$subscription.amount" },
      customerCount: { $sum: 1 }
    }
  }
])

// 5. Feature Usage Patterns
// Most used features across all customers
db.usage_logs.aggregate([
  {
    $group: {
      _id: "$feature",
      usageCount: { $sum: 1 }
    }
  },
  {
    $sort: { usageCount: -1 }
  }
])

// 6. Customer Health Metrics
// Find customers with high support ticket volume
db.support_tickets.aggregate([
  {
    $group: {
      _id: "$customerId",
      ticketCount: { $sum: 1 }
    }
  },
  {
    $match: {
      ticketCount: { $gt: 5 }
    }
  }
])

// 7. Regional Analysis
// Customer distribution by region
db.customers.aggregate([
  {
    $group: {
      _id: "$metadata.region",
      customerCount: { $sum: 1 },
      totalRevenue: { $sum: "$subscription.amount" }
    }
  }
])